geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption = "Datos simulados") +
annotate("text", x = "A", y = 10.5, label = paste("valor de p = ", p_val))
error.plot
ttest <- t.test(v1 ~ grupo, data = df1, var.equal = T)
p_val <- round(ttest[["p.value"]],3)
ttest <- t.test(v1 ~ grupo, data = df1, var.equal = T)
p_val <- ttest[["p.value"]]
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean, color = "deepskyblue4")) +
geom_point() +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption = "Datos simulados") +
annotate("text", x = "A", y = 10.5, label = paste("valor de p = ", p_val))
error.plot
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean, color = "deepskyblue4")) +
geom_point() +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("valor de p = ", p_val))
error.plot
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean)) +
geom_point(color = "deepskyblue4") +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("valor de p = ", p_val))
error.plot
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean)) +
geom_point(color = "deepskyblue4") +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper), color = "deepskyblue4") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("valor de p = ", p_val))
error.plot
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean)) +
geom_point(color = "deepskyblue4") +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper), color = "deepskyblue4") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("Valor de p = ", p_val))
error.plot
?expand_limits
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean)) +
geom_point(color = "deepskyblue4") +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper), color = "deepskyblue4") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("Valor de p = ", p_val)) +
scale_y_continuous(expand_limits(y = 0))
error.plot
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean)) +
geom_point(color = "deepskyblue4") +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper), color = "deepskyblue4") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("Valor de p = ", p_val)) +
expand_limits(y = 0)
error.plot
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean)) +
geom_point(color = "deepskyblue4") +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper), color = "deepskyblue4") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("Valor de p = ", p_val)) +
expand_limits(y = 5)
error.plot
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean)) +
geom_point(color = "deepskyblue4") +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper), color = "deepskyblue4") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("Valor de p = ", p_val)) +
expand_limits(y = 0)
error.plot
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean)) +
geom_point(color = "deepskyblue4") +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper), color = "deepskyblue4") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("Valor de p = ", p_val))
error.plot
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean)) +
geom_point(color = "deepskyblue4") +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper), color = "deepskyblue4") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "grupo",
y = "x",
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("Valor de p = ", p_val))
error.plot
ttest
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean)) +
geom_point(color = "deepskyblue4") +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper), color = "deepskyblue4") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "grupo",
y = "x",
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("t(v = ", ttest[["parameter"]], ", 0.05) = ", ttest[["statistic"]], "Valor de p = ", p_val))
error.plot
library(rcompanion)
library(ggplot2)
ICs <- groupwiseMean(v1~grupo, data = df1, conf = 0.95, R = 500)
error.plot <- ggplot(data = ICs, aes(x = grupo, y = Mean)) +
geom_point(color = "deepskyblue4") +
geom_errorbar(aes(ymin = Trad.lower, ymax = Trad.upper), color = "deepskyblue4") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50", family = "Montserrat"),
legend.position = "none") +
labs(x = "grupo",
y = "x",
title = "¿Diferencias significativas?",
subtitle ="Medias e intervalos de confianza para una variable aleatoria",
caption =  paste("t(v = ", ttest[["parameter"]], ", 0.05) = ", round(ttest[["statistic"]],2), "; Valor de p = ", p_val))
error.plot
?read.xlsx
library(openxlsx)
?read.xlsx
library(openxlsx)
dietas <- read.xlsx("DietasPrac2.xlsx", sheet = 1)
library(openxlsx)
dietas <- read.xlsx("DietasPrac2.xlsx", sheet = 1)
dietas
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
?melt
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas, na.rm = T)
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas, id.vars = c("Dieta"),na.rm = T)
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas, id.vars = c("DC, CH"),na.rm = T)
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas, id.vars = c("DC", "CH"), value.name = "dieta", na.rm = T)
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas, id.vars = c("DC", "CH"), value.name = "dieta", na.rm = T)
head(dietas.molten)
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas, id.vars = c("DC", "CH"), value.name = "dieta", na.rm = T)
head(dietas.molten)
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas, value.name = "dieta", na.rm = T)
head(dietas.molten)
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas, value.name = "dieta", na.rm = T)
head(dietas.molten)
t.test(dieta~grupo, data = dieta, var.equal = T)
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas, value.name = "dieta", na.rm = T)
head(dietas.molten)
t.test(dieta~grupo, data = dietas.molten, var.equal = T)
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas, value.name = "dieta", na.rm = T)
head(dietas.molten)
t.test(dieta~variable, data = dietas.molten, var.equal = T)
t.test(dieta~variable, data = dietas.molten, var.equal = T)
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas, value.name = "dieta", na.rm = T)
head(dietas.molten)
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas,value.name = "dieta", na.rm = T)
head(dietas.molten)
dependientes <- read.xlsx("datos_t.xlsx", sheet = 2)
library(openxlsx)
dietas <- read.xlsx("dependientes.xlsx", sheet = 1)
library(openxlsx)
dietas <- read.xlsx("datos_t.xlsx", sheet = 1)
dietas
if(!require(reshape2)) install.packages("reshape2", dependencies = T)
dietas.molten <- melt(dietas,value.name = "dieta", na.rm = T)
head(dietas.molten)
t.test(dieta~variable, data = dietas.molten, var.equal = T)
dependientes <- read.xlsx("datos_t.xlsx", sheet = 2)
dependientes <- read.xlsx("datos_t.xlsx", sheet = 2)
head(dependientes)
df <- read.table(file.choose(), header = F, skip = 1, sep = ",")
colnames(df) <- c("Dieta", "Periodo", "Rep", "LT", "PT")
head(df)
print(paste("N = ", length(df$LT)))
summary(df)
df.f <- data.frame(n = NA, media = NA, sd = NA, IC_i = NA, IC_s = NA) # Columnas a llenar
n <- 2:158 # Muestreos a realizar
s <- rep(NA, 158) # Una variable "vacía" (NAs) para llenar con un ciclo for
for (i in 1:length(n)) { # Por i en 1 hasta la longitud de n (157, en este caso):
# Llena las columnas 1 hasta la iteración actual (i) con un tamaño de muestra = al valor de n en la iteración actual (n[i]):
s[1:n[i]] <- sample(df$LT, size = n[i], replace = FALSE)
# Llena el iésimo renglón con el vector de datos:
df.f[i,] <- c(n[i], # Tamaño de muestra en la iteración i
mean(s, na.rm = T), # Media para las muestras de la iteración i
sd(s, na.rm = T),  # Desviación estándar de las muestras de la iteración i
t.test(s, na.action = na.rm)[['conf.int']][1],  # Límite inferior del IC para la media de las muestras de i
t.test(s, na.action = na.rm)[['conf.int']][2]) # Límite superior del IC para la media de las muestras de i
}
df.f['amp'] <- df.f$IC_s-df.f$IC_i # Una variable extra que representa la amplitud de los intervalos para colorear la gráfica
df.f # Se imprime el DataFrame final
df.f
library(ggplot2)
error.plot <- ggplot(data = df.f, aes(x = n, y = media, color = amp)) +
geom_point() +
geom_errorbar(aes(ymin = IC_i, ymax = IC_s)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50",
family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "Longitud total de Guppys (cm)",
subtitle ="Medias e ICs según diferentes tamaños de muestra",
caption = "Datos1.csv") +
geom_hline(yintercept = mean(df$LT),
color = "springgreen4",
linetype = "dashed") +
annotate("text",
x = 80, y = mean(df$LT)+1,
label = paste("\U03BC = ", round(mean(df$LT), 2)),
color = "springgreen4") +
scale_y_continuous(breaks = NULL) +
scale_x_continuous() r+
library(ggplot2)
error.plot <- ggplot(data = df.f, aes(x = n, y = media, color = amp)) +
geom_point() +
geom_errorbar(aes(ymin = IC_i, ymax = IC_s)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50",
family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "Longitud total de Guppys (cm)",
subtitle ="Medias e ICs según diferentes tamaños de muestra",
caption = "Datos1.csv") +
geom_hline(yintercept = mean(df$LT),
color = "springgreen4",
linetype = "dashed") +
annotate("text",
x = 80, y = mean(df$LT)+1,
label = paste("\U03BC = ", round(mean(df$LT), 2)),
color = "springgreen4") +
scale_y_continuous(breaks = NULL) +
scale_x_continuous() +
geom_hline(yintercept = max(df.f$IC_s),
color = "lightslategray",
linetype = "dashed") +
annotate("text",
x = 158, y = max(df.f$IC_s)+0.17,
label = round(max(df.f$IC_s), 2),
color = "lightslategrey",
alpha = 0.7) +
geom_hline(yintercept = min(df.f$IC_i),
color = "lightslategrey",
alpha = 0.7,
linetype = "dashed") +
annotate("text",
x = 158, y = min(df.f$IC_i)+0.17,
label = round(min(df.f$IC_i), 2),
color = "lightslategray",
alpha = 0.7) +
scale_color_gradient2(low = "deepskyblue4", # Una escala de colores de azul a violeta, pasando por gris
midpoint = mean(df.f$amp),
mid = "lightslategray",
high = "violetred")
error.plot
df <- read.table("Datos1.csv", header = F, skip = 1, sep = ",")
colnames(df) <- c("Dieta", "Periodo", "Rep", "LT", "PT")
head(df)
print(paste("N = ", length(df$LT)))
summary(df)
df.f <- data.frame(n = NA, media = NA, sd = NA, IC_i = NA, IC_s = NA) # Columnas a llenar
n <- 2:158 # Muestreos a realizar
s <- rep(NA, 158) # Una variable "vacía" (NAs) para llenar con un ciclo for
for (i in 1:length(n)) { # Por i en 1 hasta la longitud de n (157, en este caso):
# Llena las columnas 1 hasta la iteración actual (i) con un tamaño de muestra = al valor de n en la iteración actual (n[i]):
s[1:n[i]] <- sample(df$LT, size = n[i], replace = FALSE)
# Llena el iésimo renglón con el vector de datos:
df.f[i,] <- c(n[i], # Tamaño de muestra en la iteración i
mean(s, na.rm = T), # Media para las muestras de la iteración i
sd(s, na.rm = T),  # Desviación estándar de las muestras de la iteración i
t.test(s, na.action = na.rm)[['conf.int']][1],  # Límite inferior del IC para la media de las muestras de i
t.test(s, na.action = na.rm)[['conf.int']][2]) # Límite superior del IC para la media de las muestras de i
}
df.f['amp'] <- df.f$IC_s-df.f$IC_i # Una variable extra que representa la amplitud de los intervalos para colorear la gráfica
df.f # Se imprime el DataFrame final
library(ggplot2)
error.plot <- ggplot(data = df.f, aes(x = n, y = media, color = amp)) +
geom_point() +
geom_errorbar(aes(ymin = IC_i, ymax = IC_s)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
aspect.ratio = 1/1.61,
axis.ticks = element_blank(),
text = element_text(colour = "gray50",
family = "Montserrat"),
legend.position = "none") +
labs(x = "n",
y = element_blank(),
title = "Longitud total de Guppys (cm)",
subtitle ="Medias e ICs según diferentes tamaños de muestra",
caption = "Datos1.csv") +
geom_hline(yintercept = mean(df$LT),
color = "springgreen4",
linetype = "dashed") +
annotate("text",
x = 80, y = mean(df$LT)+1,
label = paste("\U03BC = ", round(mean(df$LT), 2)),
color = "springgreen4") +
scale_y_continuous(breaks = NULL) +
scale_x_continuous() +
geom_hline(yintercept = max(df.f$IC_s),
color = "lightslategray",
linetype = "dashed") +
annotate("text",
x = 158, y = max(df.f$IC_s)+0.17,
label = round(max(df.f$IC_s), 2),
color = "lightslategrey",
alpha = 0.7) +
geom_hline(yintercept = min(df.f$IC_i),
color = "lightslategrey",
alpha = 0.7,
linetype = "dashed") +
annotate("text",
x = 158, y = min(df.f$IC_i)+0.17,
label = round(min(df.f$IC_i), 2),
color = "lightslategray",
alpha = 0.7) +
scale_color_gradient2(low = "deepskyblue4", # Una escala de colores de azul a violeta, pasando por gris
midpoint = mean(df.f$amp),
mid = "lightslategray",
high = "violetred")
error.plot
